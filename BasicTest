/* This query is generated by ga4Sql.com */
SELECT
  country,
  DATE,
  event_name,
  landing_page,
  device_category,
  IFNULL(
    CONCAT(session_source, ' / ', session_medium),
    CONCAT(first_user_source, ' / ', first_user_medium)
  ) AS session_source_medium,
  SUM(screen_page_views) AS screen_page_views,
  COUNT(DISTINCT user_pseudo_id) AS total_users,
  SAFE_DIVIDE(
    SUM(CAST(engaged_sessions AS INT)),
    COUNT(DISTINCT session_id)
  ) AS engagement_rate,
  1 - SAFE_DIVIDE(
    SUM(CAST(engaged_sessions AS INT)),
    COUNT(DISTINCT session_id)
  ) AS bounce_rate,
  COUNT(DISTINCT active_users) AS active_users,
  SAFE_DIVIDE(
    SUM(screen_page_views),
    COUNT(DISTINCT session_id)
  ) AS screen_page_views_per_session,
  SAFE_DIVIDE(
    SUM(engagement_time_seconds),
    COUNT(DISTINCT session_id)
  ) AS average_engagement_time_per_session,
  SUM(event_count) AS event_count
FROM
  (
    SELECT
      geo.country AS country,
      event_date AS DATE,
      event_name AS event_name,
      MAX(
        (
          SELECT
            value.string_value
          FROM
            UNNEST (event_params)
          WHERE
            event_name = 'session_start'
            AND key = 'page_location'
        )
      ) AS landing_page,
      device.category AS device_category,
      MAX(
        CASE
          WHEN (
            SELECT
              value.int_value
            FROM
              UNNEST (event_params)
            WHERE
              event_name = 'page_view'
              AND KEY = 'entrances'
          ) = 1
          AND (
            SELECT
              value.string_value
            FROM
              UNNEST (event_params)
            WHERE
              event_name = 'page_view'
              AND KEY = 'source'
          ) IS NULL THEN CONCAT(traffic_source.source)
          ELSE (
            SELECT
              value.string_value
            FROM
              UNNEST (event_params)
            WHERE
              KEY = 'source'
          )
        END
      ) AS session_source,
      traffic_source.source AS first_user_source,
      MAX(
        CASE
          WHEN (
            SELECT
              value.int_value
            FROM
              UNNEST (event_params)
            WHERE
              event_name = 'page_view'
              AND KEY = 'entrances'
          ) = 1
          AND (
            SELECT
              value.string_value
            FROM
              UNNEST (event_params)
            WHERE
              event_name = 'page_view'
              AND KEY = 'source'
          ) IS NULL THEN CONCAT(traffic_source.medium)
          ELSE (
            SELECT
              value.string_value
            FROM
              UNNEST (event_params)
            WHERE
              KEY = 'medium'
          )
        END
      ) AS session_medium,
      traffic_source.medium AS first_user_medium,
      COUNT(
        CASE
          WHEN event_name = 'page_view' THEN 1
        END
      ) AS screen_page_views,
      user_pseudo_id,
      MAX(
        (
          SELECT
            value.string_value
          FROM
            UNNEST (event_params)
          WHERE
            key = 'session_engaged'
        )
      ) AS engaged_sessions,
      CONCAT(
        user_pseudo_id,
        (
          SELECT
            value.int_value
          FROM
            UNNEST (event_params)
          WHERE
            key = 'ga_session_id'
        )
      ) AS session_id,
      MAX(
        CASE
          WHEN (
            SELECT
              value.int_value
            FROM
              UNNEST (event_params)
            WHERE
              key = 'engagement_time_msec'
          ) > 0
          OR (
            SELECT
              value.string_value
            FROM
              UNNEST (event_params)
            WHERE
              key = 'session_engaged'
          ) = '1' THEN user_pseudo_id
          ELSE NULL
        END
      ) AS active_users,
      SAFE_DIVIDE(
        SUM(
          (
            SELECT
              value.int_value
            FROM
              UNNEST (event_params)
            WHERE
              key = 'engagement_time_msec'
          )
        ),
        1000
      ) AS engagement_time_seconds,
      COUNT(event_name) AS event_count
    FROM
      `123423424*`
    WHERE
      _TABLE_SUFFIX BETWEEN FORMAT_DATE('%Y%m%d', DATE_TRUNC(CURRENT_DATE(), MONTH)) AND FORMAT_DATE(
        '%Y%m%d',
        DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      )
    GROUP BY
      country,
      DATE,
      event_name,
      device_category,
      first_user_source,
      first_user_medium,
      user_pseudo_id,
      session_id
  )
GROUP BY
  country,
  DATE,
  event_name,
  landing_page,
  device_category,
  session_source_medium
